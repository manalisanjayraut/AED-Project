/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PatientRole;

import business.BloodBank.BloodBank;
import business.BloodBank.BloodDirectory;
import ui.DoctorRole.*;
import business.Doctor.Doctor;
import business.EcoSystem;
import business.Organization.BloodOrganization;
import business.Organization.DoctorOrganization;
import business.Organization.Organization;
import business.Patient.BloodDonationRequest;
import business.Patient.Patient;
import business.UserAccount.UserAccount;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author manal
 */
public class DonateBlood extends javax.swing.JPanel {

    /**
     * Creates new form ManageDoctorProfile
     */
    private JPanel workArea;
    private DoctorOrganization organization;
    private EcoSystem business;
    private UserAccount userAccount;
    private BloodBank selectedBloodBank;
    ArrayList<Doctor> docList;
    String selectedBb;
    Patient currentPatient;
    
    public DonateBlood(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();
        
        this.workArea = userProcessContainer;
        this.business = business;
        this.userAccount = account;
        currentPatient = (Patient) userAccount;
        if(currentPatient!=null){
            
            txtAllergy.setText(currentPatient.getAllergy());
        }
        
        populateBloodBankCombo();
    }
    
    private void populateBloodBankCombo() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        BloodOrganization borg = null;
        ArrayList<Organization> org = business.getOrganizationDirectory().getOrganizationList();
        for (Organization o : org) {
            
            if (o instanceof BloodOrganization) {
                borg = (BloodOrganization) o;
                System.out.println("ui.DoctorRole.RequestBlood.populateBloodBankCombo()");
                break;
            }
            
        }
        BloodDirectory directory = borg.getBloodDirectory();
        
        for (BloodBank bloodBank : directory.getBloodBankArrayList()) {
            System.out.println("ui.DoctorRole.RequestBlood.populateBloodBankCombo()999");
            bloodbanklist.addItem(bloodBank.toString());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        units = new javax.swing.JPanel();
        requestButtonButton = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtAllergy = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        bloodbanklist = new javax.swing.JComboBox<>();
        bloodbankLocation = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        bloodGroup = new javax.swing.JComboBox<>();
        labTest1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        units.setBackground(new java.awt.Color(255, 255, 255));
        units.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestButtonButton.setBackground(new java.awt.Color(10, 132, 255));
        requestButtonButton.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        requestButtonButton.setForeground(new java.awt.Color(255, 255, 255));
        requestButtonButton.setText("Request Blood");
        requestButtonButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestButtonButtonActionPerformed(evt);
            }
        });
        units.add(requestButtonButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 580, 200, 39));

        cancel.setBackground(new java.awt.Color(255, 55, 95));
        cancel.setFont(new java.awt.Font("SF Pro Text", 1, 14)); // NOI18N
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setText("Cancel Request");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        units.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 580, 190, 39));

        jLabel2.setFont(new java.awt.Font("SF Pro Display", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 255));
        jLabel2.setText("Blood Donation Form ");
        units.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 570, 50));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(73, 84, 90));
        jLabel7.setText("Blood Bank");
        units.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 220, -1));

        txtAllergy.setFont(new java.awt.Font("SF Pro Text", 0, 14)); // NOI18N
        units.add(txtAllergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 420, 30));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(73, 84, 90));
        jLabel8.setText("Patient Allergy Name");
        units.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 220, -1));

        jLabel10.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(73, 84, 90));
        jLabel10.setText("Location");
        units.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 220, -1));

        bloodbanklist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodbanklistActionPerformed(evt);
            }
        });
        units.add(bloodbanklist, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 420, 30));

        bloodbankLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodbankLocationActionPerformed(evt);
            }
        });
        units.add(bloodbankLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 420, 30));

        jLabel9.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(73, 84, 90));
        jLabel9.setText("Blood Group");
        units.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 220, -1));

        bloodGroup.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        bloodGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodGroupActionPerformed(evt);
            }
        });
        units.add(bloodGroup, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 420, 30));

        labTest1.setBackground(new java.awt.Color(255, 55, 95));
        labTest1.setFont(new java.awt.Font("SF Pro Text", 1, 18)); // NOI18N
        labTest1.setForeground(new java.awt.Color(255, 255, 255));
        labTest1.setText("Place Request");
        labTest1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labTest1ActionPerformed(evt);
            }
        });
        units.add(labTest1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, 180, 41));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/blood icon.png"))); // NOI18N
        units.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(units, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(units, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 76, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void requestButtonButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestButtonButtonActionPerformed
        // TODO add your handling code here:
        //addBloodReq();
    }//GEN-LAST:event_requestButtonButtonActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:

        //  deleteBloodReq();
    }//GEN-LAST:event_cancelActionPerformed

    private void bloodbanklistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodbanklistActionPerformed
        // TODO add your handling code here:

        selectedBb = (String) bloodbanklist.getSelectedItem();
        if (selectedBb != null) {
            BloodOrganization borg = null;
            ArrayList<Organization> org = business.getOrganizationDirectory().getOrganizationList();
            for (Organization o : org) {
                
                if (o instanceof BloodOrganization) {
                    borg = (BloodOrganization) o;
                    System.out.println("ui.DoctorRole.RequestBlood.populateBloodBankCombo()");
                    break;
                }
                
            }
            BloodDirectory directory = borg.getBloodDirectory();
            
            for (BloodBank bloodBank : directory.getBloodBankArrayList()) {
                
                if (bloodBank.getId() != null && bloodBank.getId().equals(selectedBb)) {
                    selectedBloodBank = bloodBank;
                }
            }
        }
        
        bloodbankLocation.addItem(selectedBloodBank.getLocation());
        //System.out.println("ui.DoctorRole.RequestBlood.bloodbanklistActionPerformed()"+selectedBb);
        //  bloodbankLocation.addItem();
        //  populateRequestTable(selectedBb);
    }//GEN-LAST:event_bloodbanklistActionPerformed

    private void bloodbankLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodbankLocationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodbankLocationActionPerformed

    private void bloodGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodGroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bloodGroupActionPerformed

    private void labTest1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labTest1ActionPerformed
        // TODO add your handling code here:

        if (selectedBb != null) {
            BloodOrganization borg = null;
            ArrayList<Organization> org = business.getOrganizationDirectory().getOrganizationList();
            for (Organization o : org) {
                
                if (o instanceof BloodOrganization) {
                    borg = (BloodOrganization) o;
                    System.out.println("ui.DoctorRole.RequestBlood.populateBloodBankCombo()");
                    break;
                }
                
            }
            BloodDirectory directory = borg.getBloodDirectory();
            
            for (BloodBank bloodBank : directory.getBloodBankArrayList()) {
                
                if (bloodBank.getId() != null && bloodBank.getId().equals(selectedBb)) {
                    selectedBloodBank = bloodBank;
                }
            }
            
            BloodDonationRequest bloodRequest = new BloodDonationRequest();

            //if (unit.getText().isEmpty()) {
            //  JOptionPane.showMessageDialog(null, "please enter all mandatory fields");
            //  return;
            // }
            int z = 1 + (int) (Math.random() * 100);
            bloodRequest.setId(z);
            // bloodRequest.setFirstName(firstNameTxt.getText());
            bloodRequest.setBloodType(bloodGroup.getSelectedItem().toString());
            // bloodRequest.setUnits(Integer.parseInt(unit.getText()));
            bloodRequest.setStatus("Pending");
            bloodRequest.setBloodBankName(selectedBloodBank);
            Patient patient = (Patient) userAccount;
            bloodRequest.setPatient(patient);
            
            selectedBloodBank.getListBloodDonationRequest().add(bloodRequest);
            
            JOptionPane.showMessageDialog(null, "Blood Donation Requested Successfully!!");
            // jTable3.setModel(new DefaultTableModel(null, new String[]{"ID", "Center", "Status", "Blood Type", "Units requested"}));

        }
    }//GEN-LAST:event_labTest1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bloodGroup;
    private javax.swing.JComboBox<String> bloodbankLocation;
    private javax.swing.JComboBox<String> bloodbanklist;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton labTest1;
    private javax.swing.JButton requestButtonButton;
    private javax.swing.JTextField txtAllergy;
    private javax.swing.JPanel units;
    // End of variables declaration//GEN-END:variables
}
