/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PatientRole;

import business.Doctor.Appointment;
import business.Doctor.Doctor;

import business.Doctor.DoctorPatientMap;
import business.EcoSystem;
import business.Organization.DoctorOrganization;
import business.Organization.Organization;
import business.Patient.MedicalRecord;
import business.Patient.Patient;
import business.Person.Person;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import static java.time.Clock.system;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import ui.DoctorRole.RequestPresciption;

/**
 *
 * @author manal
 */
public class ManageMyRecordJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageDoctorAppointment
     */
    private JPanel workArea;
    private DoctorOrganization organization;
    private EcoSystem business;
    private UserAccount userAccount;
    private Patient currentPatient;
    ArrayList<Doctor> docList;

    public ManageMyRecordJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business) {
        initComponents();

        this.workArea = userProcessContainer;
        this.business = business;
        this.userAccount = account;

        populateMyRecords();

//        populateSpecialization();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        txtTemp = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtBP = new javax.swing.JTextField();
        txtHR = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        bookAppointment = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtRR = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        container.setBackground(new java.awt.Color(250, 249, 251));
        container.setPreferredSize(new java.awt.Dimension(1160, 750));
        container.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SF Pro Display", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("My Health Records");
        container.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 280, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("SF Pro Text", 0, 16)); // NOI18N
        jLabel2.setText("Date");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 102, -1));
        jPanel2.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 20, 180, 36));

        jLabel7.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(73, 84, 90));
        jLabel7.setText("Temprature");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 150, -1));

        txtTemp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTempKeyPressed(evt);
            }
        });
        jPanel2.add(txtTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 240, 40));

        jLabel8.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(73, 84, 90));
        jLabel8.setText("Blood Pressure");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 150, -1));

        jLabel9.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(73, 84, 90));
        jLabel9.setText("Weight:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 150, -1));

        txtBP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBPKeyPressed(evt);
            }
        });
        jPanel2.add(txtBP, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 240, 40));

        txtHR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHRKeyPressed(evt);
            }
        });
        jPanel2.add(txtHR, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 70, 240, 40));

        jLabel10.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(73, 84, 90));
        jLabel10.setText("Respiratory Rate");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 150, -1));

        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWeightKeyPressed(evt);
            }
        });
        jPanel2.add(txtWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 70, 180, 40));

        bookAppointment.setBackground(new java.awt.Color(255, 55, 95));
        bookAppointment.setFont(new java.awt.Font("SF Pro", 1, 18)); // NOI18N
        bookAppointment.setForeground(new java.awt.Color(255, 255, 255));
        bookAppointment.setText("Add Record");
        bookAppointment.setBorder(null);
        bookAppointment.setFocusPainted(false);
        bookAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookAppointmentActionPerformed(evt);
            }
        });
        jPanel2.add(bookAppointment, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 260, 220, 50));

        jLabel11.setFont(new java.awt.Font("SF Pro Text", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(73, 84, 90));
        jLabel11.setText("Heart Rate");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 150, -1));

        txtRR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRRKeyPressed(evt);
            }
        });
        jPanel2.add(txtRR, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 240, 40));

        container.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 730, 350));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Blood Pressure", "Heart Rate", "Respiratory rate ", "Temperature", "Weight", "Date"
            }
        ));
        jTable1.setSelectionBackground(new java.awt.Color(204, 204, 255));
        jScrollPane1.setViewportView(jTable1);

        container.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 730, 140));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(container, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(container, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bookAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookAppointmentActionPerformed
        // TODO add your handling code here:

        currentPatient = (Patient) userAccount;

        if (currentPatient != null) {

            MedicalRecord record = new MedicalRecord();
            SimpleDateFormat sdate = new SimpleDateFormat("yyyy-MM-dd");
            String appDate = sdate.format(jDateChooser1.getDate());
            record.setBp(txtBP.getText());
            record.setHeartRate(txtHR.getText());
            record.setRespRate(txtRR.getText());
            record.setTemp(txtTemp.getText());
            record.setWeight(txtWeight.getText());
            record.setDate(appDate);

            Random random = new Random();
            int randomId = 1 + random.nextInt(100);
            record.setId(Integer.toString(randomId));

            if (currentPatient.getRecord() != null) {
                currentPatient.getRecord().add(record);
            } else {
                List<MedicalRecord> listOfMedicalRecord = new ArrayList<>();
                listOfMedicalRecord.add(record);
                currentPatient.setRecord(listOfMedicalRecord);
            }
            JOptionPane.showMessageDialog(null, "Your Health Record is addded successfully.");
        }
        
        populateMyRecords();

    }//GEN-LAST:event_bookAppointmentActionPerformed

    private void txtBPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBPKeyPressed
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            JOptionPane.showMessageDialog(null,
                    "Error: Please enter digit only."
            );
            evt.consume();
// Stop the character from being entered
        }

    }//GEN-LAST:event_txtBPKeyPressed

    private void txtHRKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHRKeyPressed
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            JOptionPane.showMessageDialog(null,
                    "Error: Please enter digit only."
            );
            evt.consume();
// Stop the character from being entered
        }

    }//GEN-LAST:event_txtHRKeyPressed

    private void txtRRKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRRKeyPressed
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            JOptionPane.showMessageDialog(null,
                    "Error: Please enter digit only."
            );
            evt.consume();
// Stop the character from being entered
        }

    }//GEN-LAST:event_txtRRKeyPressed

    private void txtTempKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTempKeyPressed
        // TODO add your handling code here:

        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            JOptionPane.showMessageDialog(null,
                    "Error: Please enter digit only."
            );
            evt.consume();
// Stop the character from being entered
        }

    }//GEN-LAST:event_txtTempKeyPressed

    private void txtWeightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            JOptionPane.showMessageDialog(null,
                    "Error: Please enter digit only."
            );
            evt.consume();
// Stop the character from being entered
        }

    }//GEN-LAST:event_txtWeightKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookAppointment;
    private javax.swing.JPanel container;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBP;
    private javax.swing.JTextField txtHR;
    private javax.swing.JTextField txtRR;
    private javax.swing.JTextField txtTemp;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    private void populateMyRecords() {
        //throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        Patient patient = (Patient) userAccount;
        model.setRowCount(0);

        if (patient != null && patient.getRecord() != null) {
            // DefaultTableModel tableModel = new DefaultTableModel();
            for (MedicalRecord record : patient.getRecord()) {

                if (record != null) {

                    // Retrieve patient information based on username from DoctorPatientMap
                    Object[] rowData = {
                        record.getId(),
                        record.getBp(),
                        record.getHeartRate(),
                        record.getRespRate(),
                        record.getTemp(),
                        record.getWeight(),
                        record.getDate()
                    };
                    model.addRow(rowData);
                }
            }

            // jTable1.setModel(tableModel);
        }

    }

}
